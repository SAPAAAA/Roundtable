// models/account.js

/**
 * Represents an Account in the system.
 */
class Account {
    /**
     * Creates an instance of Account.
     * @param {string | null} accountId - The unique identifier (auto-generated by DB). Null if new.
     * @param {string} username - The user's unique username.
     * @param {string} password - The user's hashed password. **Never store plain text!**
     * @param {string} email - The user's unique email address.
     * @param {Date | string | null} created - Timestamp of creation (usually set by DB).
     * @param {Date | string | null} updatedAt - Timestamp of last update (usually set by DB).
     */
    constructor(accountId, username, password, email, created, updatedAt) {
        /** @type {string | null} */
        this.accountId = accountId;

        /** @type {string} */
        this.username = username;

        /** @type {string} */
        this.password = password; // Should always be the HASHED password

        /** @type {string} */
        this.email = email;

        /** @type {Date | null} */
        // Handle potential string input from DB or allow Date objects
        this.created = created ? new Date(created) : null;

        /** @type {Date | null} */
        this.updatedAt = updatedAt ? new Date(updatedAt) : null;
    }

    /**
     * Converts a database row to an Account instance.
     * @param {Object} row - The database row.
     * @returns {Account | null} The Account instance or null if no row is provided.
     */
    static fromDbRow(row) {
        if (!row) return null;
        return new Account(
            row.accountId,
            row.username,
            row.password,
            row.email,
            row.created,
            row.updatedAt
        );
    }
}

export default Account;